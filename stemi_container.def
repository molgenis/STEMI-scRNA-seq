# getting singularity working on mac: https://sylabs.io/guides/3.8/admin-guide/installation.html#installation-on-windows-or-mac
# update container apt-get update && apt-get upgrade
# use yum in apt-get install yum
#Place the following lines into the '.rpmmacros' file:
#%_var /var
#%_dbpath %{_var}/lib/rpm
# add to sudo nano /etc/yum.conf
# assumeyes=1

BootStrap: yum
OSVersion: 7
MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/$basearch/
Include: yum
%setup

%files

%environment

%runscript


%post
    # commands to be executed inside container during bootstrap
    echo diskspacecheck=0 >> /etc/yum.conf
    mkdir -p /storage/home
    mkdir -p /storage/work
    mkdir -p /gpfs/scratch
    mkdir -p /gpfs/group
    mkdir -p /var/spool/torque
    # install subscription manager
    yum -y install subscription-manager
    # add python and install some packages
    yum -y groups install "Development Tools"
    #yum -y groups install "GNOME Desktop"
    yum -y groups install "Base"
    #yum -y groups install "X Window System" "Desktop" "Fonts"
    yum -y install qt
    yum -y install mesa-libGLU
    yum -y install SDL SDL-devel
    yum -y install epel-release
    yum -y install qtwebkit
    yum -y install qt5-qtbase-devel
    yum -y install gmp-devel
    yum -y install mpfr-devel
    #yum -y install R
    yum -y install postgresql-devel
    # install openssl
    yum -y install openssl-devel
    # install libpng
    yum -y install libpng-devel
    # install hdf5
    yum -y install hdf5-devel
    # tkl needed for nichenet
    yum -y install tcl
    yum -y install tcl-devel
    yum -y install libjpeg*
    # needed for R devtools
    yum -y install libxml2-devel
    ########################
    # try to install conda #
    ########################
    yum -y install curl
    wget https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh
    bash Anaconda3-2019.07-Linux-x86_64.sh -b -p /opt/anaconda3
    ln -s /opt/anaconda3/bind/conda /usr/local/bin/conda
    rm Anaconda3-2019.07-Linux-x86_64.sh
    #########################
    # install java          #
    #########################
    yum -y install java-1.8.0-openjdk-devel
    yum -y install java-11-openjdk
    yum -y install maven
    yum -y install git
    git clone https://github.com/molgenis/systemsgenetics.git
    cd ./systemsgenetics
    git checkout 34096bdbaae723d438d9167d962806efeb0b63e1
    # increase memory for maven
    export MAVEN_OPTS="-Xmx4096m -XX:MaxPermSize=4096m"
    # build the projects
    mvn package -DskipTests
    mkdir -p /opt/systemsgenetics/GenotypeHarmonizer/
    cp ./Genotype-Harmonizer/target/GenotypeHarmonizer-1.4.23-SNAPSHOT.jar /opt/systemsgenetics/GenotypeHarmonizer/GenotypeHarmonizer.jar
    chmod u+x /opt/systemsgenetics/GenotypeHarmonizer/GenotypeHarmonizer.jar
    ln -s /opt/systemsgenetics/GenotypeHarmonizer/GenotypeHarmonizer.jar /usr/local/bin/GenotypeHarmonizer.jar
    mkdir -p /opt/systemsgenetics/eqtl-mapping-pipeline/
    cp ./eqtl-mapping-pipeline/target/eqtl-mapping-pipeline-1.4.9a-SNAPSHOT.jar /opt/systemsgenetics/eqtl-mapping-pipeline/eqtl-mapping-pipeline.jar
    chmod u+x /opt/systemsgenetics/eqtl-mapping-pipeline/eqtl-mapping-pipeline.jar
    ln -s /opt/systemsgenetics/eqtl-mapping-pipeline/qtl-mapping-pipeline.jar /usr/local/bin/qtl-mapping-pipeline.jar
    cd ../
    rm -r systemsgenetics
    # install a zip library
    yum -y install bzip2
    # install EPEL for different packages
    yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    #sudo subscription-manager repos --enable "rhel-*-optional-rpms"
    yum -y install yum-utils
    #sudo yum-config-manager --enable "rhel-*-optional-rpms"
    #########################
    # install R             #
    #########################
    export R_VERSION=4.1.0
    curl -O https://cdn.rstudio.com/r/centos-7/pkgs/R-${R_VERSION}-1-1.x86_64.rpm
    yum -y install R-${R_VERSION}-1-1.x86_64.rpm
    ln -s /opt/R/${R_VERSION}/bin/R /usr/local/bin/R
    ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/local/bin/Rscript
    # set the repo
    echo 'local({r <- getOption("repos");r["CRAN"] <- "https://mirror.lyrahosting.com/";options(repos = r)})' > ~/Rprofile.site
    # first install biocmanager and remotes
    R --slave -e 'install.packages(c("BiocManager", "remotes"), repos="https://mirror.lyrahosting.com/CRAN/")'
    # some other stuff
    R --slave -e 'BiocManager::install("BiocGenerics")'
    R --slave -e 'BiocManager::install("Biobase")'
    # which allows us to install devtools
    R --slave -e 'BiocManager::install(c("devtools"))'
    # which allows us to install specific versions of software
    R --slave -e 'install.packages("https://www.bioconductor.org/packages/release/bioc/src/contrib/multtest_2.48.0.tar.gz", repos=NULL)'
    R --slave -e 'remotes::install_version("data.table", "1.14.0", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("ggplot2", "3.3.5", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("ggpubr", "0.4.0", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("Matrix", "1.3-4", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("Matrix.utils", "0.9.8", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("metap", "1.4", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("stringr", "1.4.0", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("RColorBrewer", "1.1-2", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("VennDiagram", "1.6.20", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("Rcpp", "1.0.7", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("foreach", "1.5.1", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("doMC", "1.3.7", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("gridExtra", "2.3", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("lattice", "0.20-44", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("plyr", "1.8.6", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("dplyr", "1.0.7", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("UpSetR", "1.4.0", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("scales", "1.1.1", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("broom", "0.7.9", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("tidyverse", "1.3.1", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("MatrixEQTL", "2.3", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("hdf5r", "1.3.3", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'remotes::install_version("Seurat", "4.0.3", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'devtools::install_github("thomasp85/patchwork@v1.1.0")'
    R --slave -e 'devtools::install_github("mojaveazure/seurat-disk", ref="163f1aade5bac38ed1e9e9c912283a7e74781610")'
    R --slave -e 'install.packages("https://www.bioconductor.org/packages/release/bioc/src/contrib/MAST_1.18.0.tar.gz", repos=NULL)'
    R --slave -e 'install.packages("https://bioconductor.org/packages/release/bioc/src/contrib/limma_3.48.1.tar.gz", repos=NULL)'
    R --slave -e 'install.packages("https://www.bioconductor.org/packages/release/bioc/src/contrib/MetaVolcanoR_1.6.0.tar.gz", repos=NULL)'
    R --slave -e 'remotes::install_version("harmony", "0.1.0", repos="https://mirror.lyrahosting.com/CRAN/")'
    R --slave -e 'devtools::install_github("JinmiaoChenLab/Rphenograph", ref="0298487f0ee13aac55eb77d19992f6bd878ba2fc")'
    R --slave -e 'devtools::install_github("sqjin/CellChat", ref="eb959d5fc45df9920116f90644fe0b5e155e304b")'
    R --slave -e 'devtools::install_github("leeshawn/MetaSKAT", ref="c0b63c1961a8d772842d4a5004330d273a8aeb43")'
    R --slave -e 'devtools::install_github("weizhouUMICH/SAIGE", ref="648850f38ed8f2d187af6a0587cb078fa3233ec6")'
